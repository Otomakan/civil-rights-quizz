{"version":3,"sources":["svg/logo.svg","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","quizQuestions","question","answers","content","type","postAnswer","wikiLink","Question","props","className","QuestionCount","counter","total","AnswerOption","useState","isWrong","setIsWrong","style","name","checked","answer","isTrue","id","answerType","value","disabled","onChange","event","background","color","onAnswerSelected","isOpen","preferPlace","body","width","padding","borderRadius","key","target","href","class","lineHeight","htmlFor","answerContent","Quiz","console","log","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","questionId","questionTotal","answerOptions","map","Result","App","Component","constructor","super","this","state","answersCount","result","handleAnswerSelected","bind","componentDidMount","shuffledAnswerOptions","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","max","apply","filter","renderQuiz","renderResult","quizResult","render","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60ab73e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6387c00b.svg\";","const quizQuestions = [\r\n  {\r\n    question: 'Where was the first \"sit-in\" at a segregated lunch counter?',\r\n    answers: [\r\n      { content: \"Greensboro, North Carolina\", type: true },\r\n      { content: \"Jackson, Mississippi\", type: false },\r\n      { content: \"Charleston, South Carolina\", type: false },\r\n      { content: \"Atlanta, Georgia\", type: false },\r\n    ],\r\n    postAnswer:\r\n      \"The Greensboro sit-ins were a series of nonviolent protests in February to July 1960, primarily in the Woolworth store, now the International Civil Rights Center and Museum, in Greensboro, North Carolina, which led to the F. W. Woolworth Company department store chain removing its policy of racial segregation in the Southern United States.\",\r\n\r\n    wikiLink: \"https://en.wikipedia.org/wiki/Greensboro_sit-ins\",\r\n  },\r\n  {\r\n    question:\r\n      \"Which Supreme Court case ruled that the segregation of public schools was unconstitutional?\",\r\n    answers: [\r\n      { content: \"Plessy v. Ferguson\", type: false },\r\n      { content: \"Brown v. Board of Education\", type: true },\r\n      { content: \"Dred Scott v. Sandford\", type: false },\r\n      { content: \"Shelley v. Kraemer\", type: false },\r\n    ],\r\n    postAnswer:\r\n      \"Brown v. Board of Education of Topeka, 347 U.S. 483 (1954),[1] was a landmark decision of the U.S. Supreme Court in which the Court ruled that U.S. state laws establishing racial segregation in public schools are unconstitutional, even if the segregated schools are otherwise equal in quality. Handed down on May 17, 1954, the Court's unanimous (9â€“0) decision stated that \\\"separate educational facilities are inherently unequal,\\\" and therefore violate the Equal Protection Clause of the Fourteenth Amendment of the U.S. Constitution. However, the decision's 14 pages did not spell out any sort of method for ending racial segregation in schools, and the Court's second decision in Brown II (349 U.S. 294 (1955)) only ordered states to desegregate \\\"with all deliberate speed.\",\r\n    wikiLink: \"https://en.wikipedia.org/wiki/Brown_v._Board_of_Education\",\r\n  },\r\n  {\r\n    question: \"What was the outcome of the murder trial of Emmet Till?\",\r\n    answers: [\r\n      { content: \"The two defendents were given life in prison\", type: false },\r\n      {\r\n        content: \"The two defendents were given the death sentence\",\r\n        type: false,\r\n      },\r\n      {\r\n        content: \"The two defends were acquitted by an all white jury\",\r\n        type: true,\r\n      },\r\n      {\r\n        content: \"The two defendents were fled Mississippi before the trial\",\r\n        type: false,\r\n      },\r\n    ],\r\n    postAnswer:\r\n      \"In September 1955, an all-white jury found Bryant and Milam not guilty of Till's kidnapping and murder. Protected against double jeopardy, the two men publicly admitted in a 1956 interview with Look magazine that they had killed Till. Till's murder was seen as a catalyst for the next phase of the civil rights movement.\",\r\n    wikiLink: \"https://en.wikipedia.org/wiki/Emmett_Till\",\r\n  },\r\n  {\r\n    question: \"What event was the catalyst for the Montgomery Bus Boycott?\",\r\n    answers: [\r\n      {\r\n        content:\r\n          \"A segregated bus system was established in Montgomery, Alabama\",\r\n        type: false,\r\n      },\r\n\r\n      {\r\n        content:\r\n          \"Bus drivers in Montgomery refused to pick up Black passengers\",\r\n        type: false,\r\n      },\r\n      {\r\n        content: \"Bus fairs were raised only for Black passengers\",\r\n        type: false,\r\n      },\r\n\r\n      {\r\n        content:\r\n          \"Claudette Colvin and Rosa Parks refused to give up their seats to a white person on a public bus\",\r\n        type: true,\r\n      },\r\n    ],\r\n    postAnswer:\r\n      'On December 1, 1955, nine months after a 15-year-old high school student, Claudette Colvin, refused to give up her seat to a white passenger on a public bus in Montgomery, Alabama, and was arrested, Rosa Parks did the same thing. Parks soon became the symbol of the resulting Montgomery Bus Boycott and received national publicity. She was later hailed as the \"mother of the civil rights movement\".',\r\n    wikiLink: \"https://en.wikipedia.org/wiki/Montgomery_Bus_Boycott\",\r\n  },\r\n  {\r\n    question:\r\n      \"How did Arkansas Governor Orval Faubus respond to the effort of the nine African Americans to attend Little Rock High School in 1957?\",\r\n    answers: [\r\n      {\r\n        content: \"He urged the school to treat the students fairly\",\r\n        type: false,\r\n      },\r\n      {\r\n        content:\r\n          \"He asked the president to intervene and block the schoolâ€™s integration\",\r\n        type: false,\r\n      },\r\n      {\r\n        content: \"He called out the National Guard to block their way\",\r\n        type: true,\r\n      },\r\n      {\r\n        content:\r\n          \"He called out the National Guard to arrest white supremacists\",\r\n        type: false,\r\n      },\r\n    ],\r\n    postAnswer:\r\n      \"A crisis erupted in Little Rock, Arkansas, when Governor of Arkansas Orval Faubus called out the National Guard on September 4 to prevent entry to the nine African-American students who had sued for the right to attend an integrated school, Little Rock Central High School.[60] Under the guidance of Daisy Bates, the nine students had been chosen to attend Central High because of their excellent grades.\",\r\n    wikiLink: \"https://en.wikipedia.org/wiki/Little_Rock_Nine\",\r\n  },\r\n];\r\n\r\nexport default quizQuestions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Question(props) {\r\n  return <h2 className=\"question\">{props.content}</h2>;\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction QuestionCount(props) {\r\n  return (\r\n    <div className=\"questionCount\">\r\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionCount.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired\r\n};\r\n\r\nexport default QuestionCount;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Popover from \"react-popover\";\r\n\r\nfunction AnswerOption(props) {\r\n  const [isWrong, setIsWrong] = useState({});\r\n  return (\r\n    <li className=\"answerOption\" style={isWrong}>\r\n      <input\r\n        type=\"radio\"\r\n        className=\"radioCustomButton\"\r\n        name=\"radioGroup\"\r\n        checked={props.answer && props.isTrue}\r\n        id={props.answerType}\r\n        value={props.answerType}\r\n        disabled={props.answer}\r\n        onChange={(event) => {\r\n          if (!props.isTrue) {\r\n            setIsWrong({ background: \"#B33A3A\", color: \"white\" });\r\n          }\r\n          props.onAnswerSelected(event);\r\n        }}\r\n      />\r\n      <Popover\r\n        isOpen={props.answer && props.isTrue}\r\n        preferPlace=\"left\"\r\n        body={[\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              width: \"fit-content\",\r\n              padding: \"2px\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n          >\r\n            <a key=\"a\" target=\"_blank\" href={props.wikiLink} class=\"link\">\r\n              read more\r\n            </a>\r\n          </div>,\r\n          <div\r\n            key=\"b\"\r\n            style={{\r\n              width: \"500px\",\r\n              padding: \"10px\",\r\n              borderRadius: \"20px\",\r\n              background: \"rgba(0, 0, 0, 0.7)\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                lineHeight: 1.8,\r\n                background: \"white\",\r\n              }}\r\n            >\r\n              {props.postAnswer}\r\n            </span>\r\n          </div>,\r\n        ]}\r\n      >\r\n        <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\r\n          {props.answerContent}\r\n        </label>\r\n      </Popover>\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswerOption.propTypes = {\r\n  answerType: PropTypes.bool.isRequired,\r\n  answerContent: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AnswerOption;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport Question from \"../components/Question\";\r\nimport QuestionCount from \"../components/QuestionCount\";\r\nimport AnswerOption from \"../components/AnswerOption\";\r\n\r\nfunction Quiz(props) {\r\n  console.log(props);\r\n  function renderAnswerOptions(key) {\r\n    return (\r\n      <AnswerOption\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.content}\r\n        isTrue={key.type}\r\n        postAnswer={props.postAnswer}\r\n        wikiLink={props.wikiLink}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div key={props.questionId}>\r\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\r\n        <Question content={props.question} />\r\n        <ul className=\"answerOptions\">\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </ul>\r\n      </div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  answer: PropTypes.string.isRequired,\r\n  answerOptions: PropTypes.array.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\n\r\nfunction Result(props) {\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container result\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div>Completed!</div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nResult.propTypes = {\r\n  quizResult: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\r\nimport quizQuestions from \"./api/quizQuestions\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport Result from \"./components/Result\";\r\nimport logo from \"./svg/logo.svg\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: \"\",\r\n      answerOptions: [],\r\n      answer: \"\",\r\n      answersCount: {},\r\n      result: \"\",\r\n    };\r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shuffledAnswerOptions = quizQuestions.map((question) =>\r\n      this.shuffleArray(question.answers)\r\n    );\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      postAnswer: quizQuestions[0].postAnswer,\r\n      wikiLink: quizQuestions[0].wikiLink,\r\n      answerOptions: shuffledAnswerOptions[0],\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 8000);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 8000);\r\n    }\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    this.setState((state, props) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1,\r\n      },\r\n      answer: answer,\r\n    }));\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: \"\",\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const answersCountKeys = Object.keys(answersCount);\r\n    const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\r\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\r\n\r\n    return answersCountKeys.filter(\r\n      (key) => answersCount[key] === maxAnswerCount\r\n    );\r\n  }\r\n\r\n  setResults(result) {\r\n    this.setState({ result: \"completed\" });\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        postAnswer={this.state.postAnswer}\r\n        wikiLink={this.state.wikiLink}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return <Result quizResult={this.state.result} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h2>Civil Rights Quiz</h2>\r\n        </div>\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}